name: Vulnerability Scanner - Generate database

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    paths:
      - ".github/workflows/vulnerability-scanner-generate-database.yml"
      - ".github/actions/compile_and_test/action.yml"
      - ".github/actions/vulnerability_scanner_deps/action.yml"

jobs:
  vulnerability-scanner-upload-database:
    strategy:
          fail-fast: false
          matrix:
              fortishield_version: ["4.8.0"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Checkout correct branch
        run: |
          echo "Event that triggered the workflow: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            git checkout tags/v${{ matrix.fortishield_version }} || echo "Failed to find tag v${{ matrix.fortishield_version }}"
            git checkout ${{ matrix.fortishield_version }} || echo "Failed to find branch ${{ matrix.fortishield_version }}"

            # Validate that the branch or tag exists
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            if [[ $BRANCH == "master" ]]; then
              echo failed to find branch/tag ${{ matrix.fortishield_version }}
              exit 1
            fi
          fi
        shell: bash

      - name: Project dependencies
        uses: ./.github/actions/vulnerability_scanner_deps

      ########################
      # Compilation          #
      ########################

      # Router
      - name: Router - Compilation
        uses: ./.github/actions/compile_and_test
        with:
          path: src/shared_modules/router
          test: false

      # Indexer connector
      - name: Indexer connector - Compilation
        uses: ./.github/actions/compile_and_test
        with:
          path: src/shared_modules/indexer_connector
          test: false

      # Content manager
      - name: Content manager - Compilation
        uses: ./.github/actions/compile_and_test
        with:
          path: src/shared_modules/content_manager
          test: false

      # Vulnerability scanner
      - name: Vulnerability scanner - Compilation
        uses: ./.github/actions/compile_and_test
        with:
          path: src/fortishield_modules/vulnerability_scanner
          test: false

      - name: Vulnerability scanner - Run vd_scanner_testtool
        run: |
          ./src/fortishield_modules/vulnerability_scanner/build/testtool/scanner/vd_scanner_testtool -c src/fortishield_modules/vulnerability_scanner/testtool/scanner/config.json -t src/fortishield_modules/vulnerability_scanner/indexer/template/legacy-template.json -d
        shell: bash

      - name: Vulnerability scanner - Compress queue folder
        run: |
          rm -rf queue/indexer
          rm -rf queue/sockets
          rm -rf queue/router
          rm -rf queue/vd_updater/tmp
          rm -rf queue/vd/reports

          VD_FILENAME=vd_1.0.0_vd_${{ matrix.fortishield_version }}.tar.xz

          echo "Compressing file"
          tar -cJf ${VD_FILENAME} --owner=0 --group=0 --no-same-owner --no-same-permissions queue

          if ! [ -f ${VD_FILENAME} ]; then
            echo "Error generating ${VD_FILENAME} file"
          else
            echo "File ${VD_FILENAME} generated"
            du -h ${VD_FILENAME}
          fi
        shell: bash

      - name: Vulnerability scanner - Uploading file to S3
        run: |
          echo "Event that triggered the workflow: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            echo "Skipping upload to S3 for pull requests"
          else
            root_folder=$(pwd)
            bucket="${{ secrets.FEED_AWS_BUCKET }}"
            file="vd_1.0.0_vd_${{ matrix.fortishield_version }}.tar.xz"
            dest_dir="deps/vulnerability_model_database"
            aws s3 cp ${file} s3://${bucket}/${dest_dir}/${file} --acl public-read
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FEED_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FEED_AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: 'us-west-1'
